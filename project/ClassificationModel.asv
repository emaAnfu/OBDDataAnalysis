clc
clear
close all

load('obd_dataset.mat');

% Number of examples
n=size(X,1);
% Number of features
m=size(X,2);

% Number of features to take
p = 2;
% Select actual variables to use to classify
if (p == 2)
    X = [X(:,1) X(:,7)];
end

% Without the meanSpeed (maybe the most determinant feature)
if(false)
    X = X(:, 4:7);
end

% Divide dataset into training set and test set
n_train = 10;
n_test = n-n_train;
[Xtr, Ytr, Xts, Yts] = randomSplitDataset(X, Y, n_train, n_test);

%% Plot dataset if 2D

if (p==2)
    figure;
    scatter(Xtr(:,1),Xtr(:,2),25,Ytr);
    title('Training set')
end

% Dealing with offset: remove mean value from each example
M = 

%% I attempt - kernel regularized least squares

sigmaArray = linspace(0.1 , 10 , 2);
lambdaArray = [ 0 logspace(-5 , 0 , 2) ];
kernel = 'gaussian';
sigma=sigmaArray(2);
lambda=lambdaArray(2);
c = regularizedKernLSTrain(Xtr, Ytr, kernel, sigma, lambda);
Ypred = sign(regularizedKernLSTest(c, Xtr, kernel, sigma, Xts));
err = calcErr(Ypred, Yts);

if (p == 2)
    figure
    
    subplot(1,2,1)
    scatter(Xtr(:,1),Xtr(:,2),25,Ytr);
    separatingFKernRLS(c, Xtr, kernel, sigma, Xtr, Yts)
    title('Training set')
    
    subplot(1,2,2)
    scatter(Xts(:,1),Xts(:,2),25,Yts);
    separatingFKernRLS(c, Xtr, kernel, sigma, Xts, Yts)
    hold on
    sel = (sign(Ypred) ~= Yts);
    scatter(Xts(sel,1),Xts(sel,2),200,Yts(sel),'x'); 
    hold off
    title('Test set KRLS')
    
end 

%% II attempt - regularized linear least squares

% lambda = 10e-5;
lambda = 0;
w = regularizedLSTrain(Xtr, Ytr, lambda);
Ypred = sign(regularizedLSTest(w, Xts));
err = calcErr(Ypred, Yts);

if (p == 2)
    figure
    
    subplot(1,2,1)
    scatter(Xtr(:,1),Xtr(:,2),25,Ytr);
    separatingFRLS(w, Xtr, Ytr); 
    title('Training set')    
    
    subplot(1,2,2)
    scatter(Xts(:,1),Xts(:,2),25,Yts);
    separatingFRLS(w, Xts, Yts);    
    hold on
    sel = (sign(Ypred) ~= Yts);
    scatter(Xts(sel,1),Xts(sel,2),200,Yts(sel),'x'); 
    hold off
    title('Test set RLS')
end 















